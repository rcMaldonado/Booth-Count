"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var page_1 = require("ui/page");
var angular_1 = require("nativescript-ui-sidedrawer/angular");
var application = require("application");
var localStorage = require("nativescript-localstorage");
var router_1 = require("nativescript-angular/router");
var nativescript_fancyalert_1 = require("nativescript-fancyalert");
var productDetails_1 = require("../providers/productDetails/productDetails");
var Sqlite = require("nativescript-sqlite");
var InventarioComponent = /** @class */ (function () {
    function InventarioComponent(_changeDetectionRef, router, page, pd) {
        var _this = this;
        this._changeDetectionRef = _changeDetectionRef;
        this.router = router;
        this.page = page;
        this.pd = pd;
        (new Sqlite("booth.db")).then(function (db) {
            db.execSQL("CREATE TABLE IF NOT EXISTS inventory(id INTEGER PRIMARY KEY AUTOINCREMENT, productCode TEXT, productName TEXT, productCategory TEXT, productPrice TEXT, initialBalance INTEGER, balance INTEGER, isVisible INTEGER)").then(function (id) {
                _this.database = db;
                console.log("Success");
            }, function (error) {
                console.log("CREATE TABLE ERROR", error);
            });
        }, function (error) {
            console.log("OPEN DB ERROR", error);
        });
    }
    InventarioComponent.prototype.ngAfterViewInit = function () {
        this.drawer = this.drawerComponent.sideDrawer;
        this._changeDetectionRef.detectChanges();
    };
    InventarioComponent.prototype.ngOnInit = function () {
        this.name = localStorage.getItem("vendor").name;
        this.fetch();
        if (application.ios) {
            this.isAndroid = false;
            this.isIos = true;
        }
        else if (application.android) {
            this.isAndroid = true;
            this.isIos = false;
        }
    };
    InventarioComponent.prototype.loadSearchBar = function (event) {
        if (this.page.android) {
            event.object.android.clearFocus();
        }
    };
    InventarioComponent.prototype.onSubmit = function (args) {
        var _this = this;
        if (this.validate()) {
            this.database.all("SELECT * FROM inventory WHERE productCode=" + this.searchCode).then(function (rows) {
                _this.inventory = [];
                for (var row in rows) {
                    _this.inventory.push({
                        "productId": rows[row][0],
                        "productCode": rows[row][1],
                        "productName": rows[row][2],
                        "productCategory": rows[row][3],
                        "productPrice": rows[row][4],
                        "initialBalance": rows[row][5],
                        "balance": rows[row][6],
                        "isVisible": rows[row][7]
                    });
                }
                console.log(_this.inventory);
            }, function (error) {
                var title = 'Producto No Existe ðŸ˜”';
                var message = 'No existe un producto con este cÃ³digo.';
                var buttonTitle = 'OK';
                nativescript_fancyalert_1.TNSFancyAlert.showNotice(title, message, buttonTitle).then(function () {
                    console.log("SELECT ERROR", error);
                });
            });
        }
        var searchBar = args.object;
        searchBar.dismissSoftInput();
    };
    InventarioComponent.prototype.onClear = function (args) {
        this.fetch();
        var searchBar = args.object;
        searchBar.dismissSoftInput();
    };
    InventarioComponent.prototype.validate = function () {
        var flag;
        if (this.searchCode !== undefined) {
            flag = true;
        }
        else {
            var title = 'Oops ðŸ˜…';
            var message = 'Entre el cÃ³digo de un producto para filtrar la busqueda';
            var buttonTitle = 'OK';
            nativescript_fancyalert_1.TNSFancyAlert.showNotice(title, message, buttonTitle);
            flag = false;
        }
        return flag;
    };
    InventarioComponent.prototype.addItem = function () {
        this.pd.title = "AÃ±adir Producto";
        this.router.navigate(['add-product']);
    };
    InventarioComponent.prototype.onItemTap = function (args) {
        var index = args.index;
        this.pd.title = "Editar Producto";
        this.pd.productDetails = {
            "productId": this.inventory[index].productId,
            "productCode": this.inventory[index].productCode,
            "productName": this.inventory[index].productName,
            "productCategory": this.inventory[index].productCategory,
            "productPrice": this.inventory[index].productPrice,
            "initialBalance": this.inventory[index].initialBalance,
        };
        this.router.navigate(['add-product']);
        console.log("Item Tapped at cell index: " + args.index);
    };
    InventarioComponent.prototype.fetch = function () {
        var _this = this;
        this.database.all("SELECT * FROM inventory").then(function (rows) {
            _this.inventory = [];
            for (var row in rows) {
                _this.inventory.push({
                    "productId": rows[row][0],
                    "productCode": rows[row][1],
                    "productName": rows[row][2],
                    "productCategory": rows[row][3],
                    "productPrice": rows[row][4],
                    "initialBalance": rows[row][5],
                    "balance": rows[row][6],
                    "isVisible": rows[row][7]
                });
            }
            console.log(_this.inventory);
        }, function (error) {
            console.log("SELECT ERROR", error);
        });
    };
    //MARK: Side Drawer Methods
    InventarioComponent.prototype.openDrawer = function () {
        this.drawer.showDrawer();
    };
    InventarioComponent.prototype.onCloseDrawerTap = function () {
        this.drawer.closeDrawer();
    };
    InventarioComponent.prototype.toInicio = function () {
        this.router.navigate(['main'], { clearHistory: true });
    };
    InventarioComponent.prototype.toInventario = function () {
        this.router.navigate(['inventario'], { clearHistory: true });
    };
    InventarioComponent.prototype.toOrdenes = function () {
        this.router.navigate(['ordenes'], { clearHistory: true });
    };
    InventarioComponent.prototype.toAjustes = function () {
        this.router.navigate(['settings'], { clearHistory: true });
    };
    __decorate([
        core_1.ViewChild(angular_1.RadSideDrawerComponent),
        __metadata("design:type", angular_1.RadSideDrawerComponent)
    ], InventarioComponent.prototype, "drawerComponent", void 0);
    InventarioComponent = __decorate([
        core_1.Component({
            selector: "inventario",
            moduleId: module.id,
            templateUrl: "./inventario.component.html",
            styleUrls: ["inventario.component.css"]
        }),
        __metadata("design:paramtypes", [core_1.ChangeDetectorRef, router_1.RouterExtensions, page_1.Page, productDetails_1.ProductDetails])
    ], InventarioComponent);
    return InventarioComponent;
}());
exports.InventarioComponent = InventarioComponent;
//# sourceMappingURL=data:application/json;base64,